#!/usr/bin/env bash

# settings for docker build, run and exec

main() {
    SCRIPTDIR=$(cd $(dirname $BASH_SOURCE[0]) && pwd)
    source $SCRIPTDIR/dscripts/conf_lib.sh  # load library functions

    init_sudo
    set_volume_root
    set_image_and_container_name
    #set_image_signature_args
    set_users
    set_buildargs
    set_run_args
    set_network
    set_vol_mapping
    #enable_x11_client
    #enable_pkcs11
    #enable_sshd()     # usually used only for debugging - requires installed sshd in image
}


set_volume_root() {
    DOCKERVOL_SHORT='/dv'
    DOCKERLOG_SHORT='/dl'
    if [[ "$TRAVIS" == "true" ]] || [[ ! -z ${JENKINS_HOME+x} ]]; then
        DOCKERVOL_SHORT='./dv';
        DOCKERLOG_SHORT='./dl';
    fi
}


set_image_and_container_name() {
    # This IMGID qualifies image, container, user and IP adddress; this is helpful for managing
    IMGID='06'
    # processes on the docker host etc.
    PROJSHORT='openldap'
    SERVICEDESCRIPTION="ldap://10.1.1.${IMGID}:8389"  # adjust to actual service
    export IMAGENAME="rhoerbe/$PROJSHORT"  # [a-z_0-9]
    export CONTAINERNAME="${IMGID}$PROJSHORT"
    export DOCKER_REGISTRY=''  # blank for index.docker.io
}


set_image_signature_args() {
    export DIDI_SIGNER='rh@identinetics.com'  # PGP uid  - no verification if empty
    export GPG_SIGN_OPTIONS='--default-key 904F1906'
}


set_users() {
    # use default OS user
    export START_AS_ROOT=      # 'True' (e.g. for apache to fall back to www user)
}


set_buildargs() {
    SLAPDPORT=8389
    export BUILDARGS="--build-arg SLAPDPORT=$SLAPDPORT"
}


set_run_args() {
    export ENVSETTINGS="
        -e ROOTPW=changeit
        -e USERNAME=slapd
        -e SLAPDHOST=0.0.0.0
    "
    export STARTCMD='/start.sh'  # unset or blank to use image default
}


set_network() {
    # The docker0 bridge has dynamic addresses, whereas a custom bridge allows predictable addresses
    NETWORK=dockernet
    set +e  # errexit off
    $sudo docker network ls | awk '{print $2}' | grep $NETWORK > /dev/null
    if (( $? == 1)); then
        $sudo docker network create --driver bridge --subnet=10.1.1.0/24 \
                  -o com.docker.network.bridge.name=br-$NETWORK $NETWORK
    fi
    export NETWORKSETTINGS="
        --net $NETWORK
        --ip 10.1.1.${IMGID}
    "
}


set_vol_mapping() {
    export VOLLIST=''
    export VOLMAPPING=''
    map_docker_volume "${CONTAINERNAME}.db" '/var/db' 'Z' $DOCKERVOL_SHORT
    map_docker_volume "${CONTAINERNAME}.etc" '/etc/openldap' 'Z' $DOCKERVOL_SHORT
    map_docker_volume "${CONTAINERNAME}.log" '/var/log/openldap' 'Z' $DOCKERLOG_SHORT
}


main
